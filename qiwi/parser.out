Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    KEY_ELSE
    KEY_IF

Grammar

Rule 0     S' -> program
Rule 1     program -> imports fnprogram
Rule 2     imports -> import imports
Rule 3     imports -> <empty>
Rule 4     import -> KEY_USE ID KEY_AS ID EOS
Rule 5     fnprogram -> <empty>
Rule 6     fnprogram -> funcdef fnprogram
Rule 7     funcdef -> KEY_FN ID LPAREN argsdecl RPAREN type LBRACE statements RBRACE
Rule 8     funcdef -> KEY_FN ID LPAREN argsdecl RPAREN LBRACE statements RBRACE
Rule 9     argsdecl -> <empty>
Rule 10    argsdecl -> argdecl
Rule 11    argsdecl -> argdecl COMMA argsdecl
Rule 12    argdecl -> ID COLON ID
Rule 13    statements -> expression
Rule 14    statements -> statement EOS statements
Rule 15    statement -> assignment
Rule 16    assignment -> ID ASSIGN expression
Rule 17    assignment -> ID COLON ID ASSIGN expression
Rule 18    expression -> LPAREN expression OP_ADD expression RPAREN
Rule 19    expression -> LPAREN expression OP_SUB expression RPAREN
Rule 20    expression -> LPAREN expression OP_MUL expression RPAREN
Rule 21    expression -> LPAREN expression OP_DIV expression RPAREN
Rule 22    expression -> CST_INT
Rule 23    expression -> ID
Rule 24    expression -> ID LBRACK CST_INT RBRACK
Rule 25    expression -> ID LPAREN args RPAREN
Rule 26    expression -> ID DOT ID LPAREN args RPAREN
Rule 27    args -> <empty>
Rule 28    args -> arg
Rule 29    args -> arg COMMA args
Rule 30    arg -> expression
Rule 31    type -> TYPE_QINT LBRACK CST_INT RBRACK

Terminals, with rules where they appear

ASSIGN               : 16 17
COLON                : 12 17
COMMA                : 11 29
CST_INT              : 22 24 31
DOT                  : 26
EOS                  : 4 14
ID                   : 4 4 7 8 12 12 16 17 17 23 24 25 26 26
KEY_AS               : 4
KEY_ELSE             : 
KEY_FN               : 7 8
KEY_IF               : 
KEY_USE              : 4
LBRACE               : 7 8
LBRACK               : 24 31
LPAREN               : 7 8 18 19 20 21 25 26
OP_ADD               : 18
OP_DIV               : 21
OP_MUL               : 20
OP_SUB               : 19
RBRACE               : 7 8
RBRACK               : 24 31
RPAREN               : 7 8 18 19 20 21 25 26
TYPE_QINT            : 31
error                : 

Nonterminals, with rules where they appear

arg                  : 28 29
argdecl              : 10 11
args                 : 25 26 29
argsdecl             : 7 8 11
assignment           : 15
expression           : 13 16 17 18 18 19 19 20 20 21 21 30
fnprogram            : 1 6
funcdef              : 6
import               : 2
imports              : 1 2
program              : 0
statement            : 14
statements           : 7 8 14
type                 : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . imports fnprogram
    (2) imports -> . import imports
    (3) imports -> .
    (4) import -> . KEY_USE ID KEY_AS ID EOS

    KEY_FN          reduce using rule 3 (imports -> .)
    $end            reduce using rule 3 (imports -> .)
    KEY_USE         shift and go to state 4

    program                        shift and go to state 1
    imports                        shift and go to state 2
    import                         shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> imports . fnprogram
    (5) fnprogram -> .
    (6) fnprogram -> . funcdef fnprogram
    (7) funcdef -> . KEY_FN ID LPAREN argsdecl RPAREN type LBRACE statements RBRACE
    (8) funcdef -> . KEY_FN ID LPAREN argsdecl RPAREN LBRACE statements RBRACE

    $end            reduce using rule 5 (fnprogram -> .)
    KEY_FN          shift and go to state 7

    fnprogram                      shift and go to state 5
    funcdef                        shift and go to state 6

state 3

    (2) imports -> import . imports
    (2) imports -> . import imports
    (3) imports -> .
    (4) import -> . KEY_USE ID KEY_AS ID EOS

    KEY_FN          reduce using rule 3 (imports -> .)
    $end            reduce using rule 3 (imports -> .)
    KEY_USE         shift and go to state 4

    import                         shift and go to state 3
    imports                        shift and go to state 8

state 4

    (4) import -> KEY_USE . ID KEY_AS ID EOS

    ID              shift and go to state 9


state 5

    (1) program -> imports fnprogram .

    $end            reduce using rule 1 (program -> imports fnprogram .)


state 6

    (6) fnprogram -> funcdef . fnprogram
    (5) fnprogram -> .
    (6) fnprogram -> . funcdef fnprogram
    (7) funcdef -> . KEY_FN ID LPAREN argsdecl RPAREN type LBRACE statements RBRACE
    (8) funcdef -> . KEY_FN ID LPAREN argsdecl RPAREN LBRACE statements RBRACE

    $end            reduce using rule 5 (fnprogram -> .)
    KEY_FN          shift and go to state 7

    funcdef                        shift and go to state 6
    fnprogram                      shift and go to state 10

state 7

    (7) funcdef -> KEY_FN . ID LPAREN argsdecl RPAREN type LBRACE statements RBRACE
    (8) funcdef -> KEY_FN . ID LPAREN argsdecl RPAREN LBRACE statements RBRACE

    ID              shift and go to state 11


state 8

    (2) imports -> import imports .

    KEY_FN          reduce using rule 2 (imports -> import imports .)
    $end            reduce using rule 2 (imports -> import imports .)


state 9

    (4) import -> KEY_USE ID . KEY_AS ID EOS

    KEY_AS          shift and go to state 12


state 10

    (6) fnprogram -> funcdef fnprogram .

    $end            reduce using rule 6 (fnprogram -> funcdef fnprogram .)


state 11

    (7) funcdef -> KEY_FN ID . LPAREN argsdecl RPAREN type LBRACE statements RBRACE
    (8) funcdef -> KEY_FN ID . LPAREN argsdecl RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 13


state 12

    (4) import -> KEY_USE ID KEY_AS . ID EOS

    ID              shift and go to state 14


state 13

    (7) funcdef -> KEY_FN ID LPAREN . argsdecl RPAREN type LBRACE statements RBRACE
    (8) funcdef -> KEY_FN ID LPAREN . argsdecl RPAREN LBRACE statements RBRACE
    (9) argsdecl -> .
    (10) argsdecl -> . argdecl
    (11) argsdecl -> . argdecl COMMA argsdecl
    (12) argdecl -> . ID COLON ID

    RPAREN          reduce using rule 9 (argsdecl -> .)
    ID              shift and go to state 15

    argsdecl                       shift and go to state 16
    argdecl                        shift and go to state 17

state 14

    (4) import -> KEY_USE ID KEY_AS ID . EOS

    EOS             shift and go to state 18


state 15

    (12) argdecl -> ID . COLON ID

    COLON           shift and go to state 19


state 16

    (7) funcdef -> KEY_FN ID LPAREN argsdecl . RPAREN type LBRACE statements RBRACE
    (8) funcdef -> KEY_FN ID LPAREN argsdecl . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 20


state 17

    (10) argsdecl -> argdecl .
    (11) argsdecl -> argdecl . COMMA argsdecl

    RPAREN          reduce using rule 10 (argsdecl -> argdecl .)
    COMMA           shift and go to state 21


state 18

    (4) import -> KEY_USE ID KEY_AS ID EOS .

    KEY_USE         reduce using rule 4 (import -> KEY_USE ID KEY_AS ID EOS .)
    KEY_FN          reduce using rule 4 (import -> KEY_USE ID KEY_AS ID EOS .)
    $end            reduce using rule 4 (import -> KEY_USE ID KEY_AS ID EOS .)


state 19

    (12) argdecl -> ID COLON . ID

    ID              shift and go to state 22


state 20

    (7) funcdef -> KEY_FN ID LPAREN argsdecl RPAREN . type LBRACE statements RBRACE
    (8) funcdef -> KEY_FN ID LPAREN argsdecl RPAREN . LBRACE statements RBRACE
    (31) type -> . TYPE_QINT LBRACK CST_INT RBRACK

    LBRACE          shift and go to state 24
    TYPE_QINT       shift and go to state 25

    type                           shift and go to state 23

state 21

    (11) argsdecl -> argdecl COMMA . argsdecl
    (9) argsdecl -> .
    (10) argsdecl -> . argdecl
    (11) argsdecl -> . argdecl COMMA argsdecl
    (12) argdecl -> . ID COLON ID

    RPAREN          reduce using rule 9 (argsdecl -> .)
    ID              shift and go to state 15

    argdecl                        shift and go to state 17
    argsdecl                       shift and go to state 26

state 22

    (12) argdecl -> ID COLON ID .

    COMMA           reduce using rule 12 (argdecl -> ID COLON ID .)
    RPAREN          reduce using rule 12 (argdecl -> ID COLON ID .)


state 23

    (7) funcdef -> KEY_FN ID LPAREN argsdecl RPAREN type . LBRACE statements RBRACE

    LBRACE          shift and go to state 27


state 24

    (8) funcdef -> KEY_FN ID LPAREN argsdecl RPAREN LBRACE . statements RBRACE
    (13) statements -> . expression
    (14) statements -> . statement EOS statements
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN expression
    (17) assignment -> . ID COLON ID ASSIGN expression

    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 28

    statements                     shift and go to state 30
    expression                     shift and go to state 31
    statement                      shift and go to state 32
    assignment                     shift and go to state 34

state 25

    (31) type -> TYPE_QINT . LBRACK CST_INT RBRACK

    LBRACK          shift and go to state 35


state 26

    (11) argsdecl -> argdecl COMMA argsdecl .

    RPAREN          reduce using rule 11 (argsdecl -> argdecl COMMA argsdecl .)


state 27

    (7) funcdef -> KEY_FN ID LPAREN argsdecl RPAREN type LBRACE . statements RBRACE
    (13) statements -> . expression
    (14) statements -> . statement EOS statements
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN expression
    (17) assignment -> . ID COLON ID ASSIGN expression

    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 28

    statements                     shift and go to state 36
    expression                     shift and go to state 31
    statement                      shift and go to state 32
    assignment                     shift and go to state 34

state 28

    (23) expression -> ID .
    (24) expression -> ID . LBRACK CST_INT RBRACK
    (25) expression -> ID . LPAREN args RPAREN
    (26) expression -> ID . DOT ID LPAREN args RPAREN
    (16) assignment -> ID . ASSIGN expression
    (17) assignment -> ID . COLON ID ASSIGN expression

    RBRACE          reduce using rule 23 (expression -> ID .)
    LBRACK          shift and go to state 37
    LPAREN          shift and go to state 38
    DOT             shift and go to state 39
    ASSIGN          shift and go to state 40
    COLON           shift and go to state 41


state 29

    (18) expression -> LPAREN . expression OP_ADD expression RPAREN
    (19) expression -> LPAREN . expression OP_SUB expression RPAREN
    (20) expression -> LPAREN . expression OP_MUL expression RPAREN
    (21) expression -> LPAREN . expression OP_DIV expression RPAREN
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN

    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 43

    expression                     shift and go to state 42

state 30

    (8) funcdef -> KEY_FN ID LPAREN argsdecl RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 44


state 31

    (13) statements -> expression .

    RBRACE          reduce using rule 13 (statements -> expression .)


state 32

    (14) statements -> statement . EOS statements

    EOS             shift and go to state 45


state 33

    (22) expression -> CST_INT .

    RBRACE          reduce using rule 22 (expression -> CST_INT .)
    OP_ADD          reduce using rule 22 (expression -> CST_INT .)
    OP_SUB          reduce using rule 22 (expression -> CST_INT .)
    OP_MUL          reduce using rule 22 (expression -> CST_INT .)
    OP_DIV          reduce using rule 22 (expression -> CST_INT .)
    COMMA           reduce using rule 22 (expression -> CST_INT .)
    RPAREN          reduce using rule 22 (expression -> CST_INT .)
    EOS             reduce using rule 22 (expression -> CST_INT .)


state 34

    (15) statement -> assignment .

    EOS             reduce using rule 15 (statement -> assignment .)


state 35

    (31) type -> TYPE_QINT LBRACK . CST_INT RBRACK

    CST_INT         shift and go to state 46


state 36

    (7) funcdef -> KEY_FN ID LPAREN argsdecl RPAREN type LBRACE statements . RBRACE

    RBRACE          shift and go to state 47


state 37

    (24) expression -> ID LBRACK . CST_INT RBRACK

    CST_INT         shift and go to state 48


state 38

    (25) expression -> ID LPAREN . args RPAREN
    (27) args -> .
    (28) args -> . arg
    (29) args -> . arg COMMA args
    (30) arg -> . expression
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN

    RPAREN          reduce using rule 27 (args -> .)
    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 43

    args                           shift and go to state 49
    arg                            shift and go to state 50
    expression                     shift and go to state 51

state 39

    (26) expression -> ID DOT . ID LPAREN args RPAREN

    ID              shift and go to state 52


state 40

    (16) assignment -> ID ASSIGN . expression
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN

    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 43

    expression                     shift and go to state 53

state 41

    (17) assignment -> ID COLON . ID ASSIGN expression

    ID              shift and go to state 54


state 42

    (18) expression -> LPAREN expression . OP_ADD expression RPAREN
    (19) expression -> LPAREN expression . OP_SUB expression RPAREN
    (20) expression -> LPAREN expression . OP_MUL expression RPAREN
    (21) expression -> LPAREN expression . OP_DIV expression RPAREN

    OP_ADD          shift and go to state 55
    OP_SUB          shift and go to state 56
    OP_MUL          shift and go to state 57
    OP_DIV          shift and go to state 58


state 43

    (23) expression -> ID .
    (24) expression -> ID . LBRACK CST_INT RBRACK
    (25) expression -> ID . LPAREN args RPAREN
    (26) expression -> ID . DOT ID LPAREN args RPAREN

    OP_ADD          reduce using rule 23 (expression -> ID .)
    OP_SUB          reduce using rule 23 (expression -> ID .)
    OP_MUL          reduce using rule 23 (expression -> ID .)
    OP_DIV          reduce using rule 23 (expression -> ID .)
    COMMA           reduce using rule 23 (expression -> ID .)
    RPAREN          reduce using rule 23 (expression -> ID .)
    EOS             reduce using rule 23 (expression -> ID .)
    LBRACK          shift and go to state 37
    LPAREN          shift and go to state 38
    DOT             shift and go to state 39


state 44

    (8) funcdef -> KEY_FN ID LPAREN argsdecl RPAREN LBRACE statements RBRACE .

    KEY_FN          reduce using rule 8 (funcdef -> KEY_FN ID LPAREN argsdecl RPAREN LBRACE statements RBRACE .)
    $end            reduce using rule 8 (funcdef -> KEY_FN ID LPAREN argsdecl RPAREN LBRACE statements RBRACE .)


state 45

    (14) statements -> statement EOS . statements
    (13) statements -> . expression
    (14) statements -> . statement EOS statements
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN
    (15) statement -> . assignment
    (16) assignment -> . ID ASSIGN expression
    (17) assignment -> . ID COLON ID ASSIGN expression

    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 28

    statement                      shift and go to state 32
    statements                     shift and go to state 59
    expression                     shift and go to state 31
    assignment                     shift and go to state 34

state 46

    (31) type -> TYPE_QINT LBRACK CST_INT . RBRACK

    RBRACK          shift and go to state 60


state 47

    (7) funcdef -> KEY_FN ID LPAREN argsdecl RPAREN type LBRACE statements RBRACE .

    KEY_FN          reduce using rule 7 (funcdef -> KEY_FN ID LPAREN argsdecl RPAREN type LBRACE statements RBRACE .)
    $end            reduce using rule 7 (funcdef -> KEY_FN ID LPAREN argsdecl RPAREN type LBRACE statements RBRACE .)


state 48

    (24) expression -> ID LBRACK CST_INT . RBRACK

    RBRACK          shift and go to state 61


state 49

    (25) expression -> ID LPAREN args . RPAREN

    RPAREN          shift and go to state 62


state 50

    (28) args -> arg .
    (29) args -> arg . COMMA args

    RPAREN          reduce using rule 28 (args -> arg .)
    COMMA           shift and go to state 63


state 51

    (30) arg -> expression .

    COMMA           reduce using rule 30 (arg -> expression .)
    RPAREN          reduce using rule 30 (arg -> expression .)


state 52

    (26) expression -> ID DOT ID . LPAREN args RPAREN

    LPAREN          shift and go to state 64


state 53

    (16) assignment -> ID ASSIGN expression .

    EOS             reduce using rule 16 (assignment -> ID ASSIGN expression .)


state 54

    (17) assignment -> ID COLON ID . ASSIGN expression

    ASSIGN          shift and go to state 65


state 55

    (18) expression -> LPAREN expression OP_ADD . expression RPAREN
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN

    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 43

    expression                     shift and go to state 66

state 56

    (19) expression -> LPAREN expression OP_SUB . expression RPAREN
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN

    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 43

    expression                     shift and go to state 67

state 57

    (20) expression -> LPAREN expression OP_MUL . expression RPAREN
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN

    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 43

    expression                     shift and go to state 68

state 58

    (21) expression -> LPAREN expression OP_DIV . expression RPAREN
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN

    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 43

    expression                     shift and go to state 69

state 59

    (14) statements -> statement EOS statements .

    RBRACE          reduce using rule 14 (statements -> statement EOS statements .)


state 60

    (31) type -> TYPE_QINT LBRACK CST_INT RBRACK .

    LBRACE          reduce using rule 31 (type -> TYPE_QINT LBRACK CST_INT RBRACK .)


state 61

    (24) expression -> ID LBRACK CST_INT RBRACK .

    RBRACE          reduce using rule 24 (expression -> ID LBRACK CST_INT RBRACK .)
    OP_ADD          reduce using rule 24 (expression -> ID LBRACK CST_INT RBRACK .)
    OP_SUB          reduce using rule 24 (expression -> ID LBRACK CST_INT RBRACK .)
    OP_MUL          reduce using rule 24 (expression -> ID LBRACK CST_INT RBRACK .)
    OP_DIV          reduce using rule 24 (expression -> ID LBRACK CST_INT RBRACK .)
    COMMA           reduce using rule 24 (expression -> ID LBRACK CST_INT RBRACK .)
    RPAREN          reduce using rule 24 (expression -> ID LBRACK CST_INT RBRACK .)
    EOS             reduce using rule 24 (expression -> ID LBRACK CST_INT RBRACK .)


state 62

    (25) expression -> ID LPAREN args RPAREN .

    RBRACE          reduce using rule 25 (expression -> ID LPAREN args RPAREN .)
    OP_ADD          reduce using rule 25 (expression -> ID LPAREN args RPAREN .)
    OP_SUB          reduce using rule 25 (expression -> ID LPAREN args RPAREN .)
    OP_MUL          reduce using rule 25 (expression -> ID LPAREN args RPAREN .)
    OP_DIV          reduce using rule 25 (expression -> ID LPAREN args RPAREN .)
    COMMA           reduce using rule 25 (expression -> ID LPAREN args RPAREN .)
    RPAREN          reduce using rule 25 (expression -> ID LPAREN args RPAREN .)
    EOS             reduce using rule 25 (expression -> ID LPAREN args RPAREN .)


state 63

    (29) args -> arg COMMA . args
    (27) args -> .
    (28) args -> . arg
    (29) args -> . arg COMMA args
    (30) arg -> . expression
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN

    RPAREN          reduce using rule 27 (args -> .)
    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 43

    arg                            shift and go to state 50
    args                           shift and go to state 70
    expression                     shift and go to state 51

state 64

    (26) expression -> ID DOT ID LPAREN . args RPAREN
    (27) args -> .
    (28) args -> . arg
    (29) args -> . arg COMMA args
    (30) arg -> . expression
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN

    RPAREN          reduce using rule 27 (args -> .)
    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 43

    args                           shift and go to state 71
    arg                            shift and go to state 50
    expression                     shift and go to state 51

state 65

    (17) assignment -> ID COLON ID ASSIGN . expression
    (18) expression -> . LPAREN expression OP_ADD expression RPAREN
    (19) expression -> . LPAREN expression OP_SUB expression RPAREN
    (20) expression -> . LPAREN expression OP_MUL expression RPAREN
    (21) expression -> . LPAREN expression OP_DIV expression RPAREN
    (22) expression -> . CST_INT
    (23) expression -> . ID
    (24) expression -> . ID LBRACK CST_INT RBRACK
    (25) expression -> . ID LPAREN args RPAREN
    (26) expression -> . ID DOT ID LPAREN args RPAREN

    LPAREN          shift and go to state 29
    CST_INT         shift and go to state 33
    ID              shift and go to state 43

    expression                     shift and go to state 72

state 66

    (18) expression -> LPAREN expression OP_ADD expression . RPAREN

    RPAREN          shift and go to state 73


state 67

    (19) expression -> LPAREN expression OP_SUB expression . RPAREN

    RPAREN          shift and go to state 74


state 68

    (20) expression -> LPAREN expression OP_MUL expression . RPAREN

    RPAREN          shift and go to state 75


state 69

    (21) expression -> LPAREN expression OP_DIV expression . RPAREN

    RPAREN          shift and go to state 76


state 70

    (29) args -> arg COMMA args .

    RPAREN          reduce using rule 29 (args -> arg COMMA args .)


state 71

    (26) expression -> ID DOT ID LPAREN args . RPAREN

    RPAREN          shift and go to state 77


state 72

    (17) assignment -> ID COLON ID ASSIGN expression .

    EOS             reduce using rule 17 (assignment -> ID COLON ID ASSIGN expression .)


state 73

    (18) expression -> LPAREN expression OP_ADD expression RPAREN .

    RBRACE          reduce using rule 18 (expression -> LPAREN expression OP_ADD expression RPAREN .)
    OP_ADD          reduce using rule 18 (expression -> LPAREN expression OP_ADD expression RPAREN .)
    OP_SUB          reduce using rule 18 (expression -> LPAREN expression OP_ADD expression RPAREN .)
    OP_MUL          reduce using rule 18 (expression -> LPAREN expression OP_ADD expression RPAREN .)
    OP_DIV          reduce using rule 18 (expression -> LPAREN expression OP_ADD expression RPAREN .)
    COMMA           reduce using rule 18 (expression -> LPAREN expression OP_ADD expression RPAREN .)
    RPAREN          reduce using rule 18 (expression -> LPAREN expression OP_ADD expression RPAREN .)
    EOS             reduce using rule 18 (expression -> LPAREN expression OP_ADD expression RPAREN .)


state 74

    (19) expression -> LPAREN expression OP_SUB expression RPAREN .

    RBRACE          reduce using rule 19 (expression -> LPAREN expression OP_SUB expression RPAREN .)
    OP_ADD          reduce using rule 19 (expression -> LPAREN expression OP_SUB expression RPAREN .)
    OP_SUB          reduce using rule 19 (expression -> LPAREN expression OP_SUB expression RPAREN .)
    OP_MUL          reduce using rule 19 (expression -> LPAREN expression OP_SUB expression RPAREN .)
    OP_DIV          reduce using rule 19 (expression -> LPAREN expression OP_SUB expression RPAREN .)
    COMMA           reduce using rule 19 (expression -> LPAREN expression OP_SUB expression RPAREN .)
    RPAREN          reduce using rule 19 (expression -> LPAREN expression OP_SUB expression RPAREN .)
    EOS             reduce using rule 19 (expression -> LPAREN expression OP_SUB expression RPAREN .)


state 75

    (20) expression -> LPAREN expression OP_MUL expression RPAREN .

    RBRACE          reduce using rule 20 (expression -> LPAREN expression OP_MUL expression RPAREN .)
    OP_ADD          reduce using rule 20 (expression -> LPAREN expression OP_MUL expression RPAREN .)
    OP_SUB          reduce using rule 20 (expression -> LPAREN expression OP_MUL expression RPAREN .)
    OP_MUL          reduce using rule 20 (expression -> LPAREN expression OP_MUL expression RPAREN .)
    OP_DIV          reduce using rule 20 (expression -> LPAREN expression OP_MUL expression RPAREN .)
    COMMA           reduce using rule 20 (expression -> LPAREN expression OP_MUL expression RPAREN .)
    RPAREN          reduce using rule 20 (expression -> LPAREN expression OP_MUL expression RPAREN .)
    EOS             reduce using rule 20 (expression -> LPAREN expression OP_MUL expression RPAREN .)


state 76

    (21) expression -> LPAREN expression OP_DIV expression RPAREN .

    RBRACE          reduce using rule 21 (expression -> LPAREN expression OP_DIV expression RPAREN .)
    OP_ADD          reduce using rule 21 (expression -> LPAREN expression OP_DIV expression RPAREN .)
    OP_SUB          reduce using rule 21 (expression -> LPAREN expression OP_DIV expression RPAREN .)
    OP_MUL          reduce using rule 21 (expression -> LPAREN expression OP_DIV expression RPAREN .)
    OP_DIV          reduce using rule 21 (expression -> LPAREN expression OP_DIV expression RPAREN .)
    COMMA           reduce using rule 21 (expression -> LPAREN expression OP_DIV expression RPAREN .)
    RPAREN          reduce using rule 21 (expression -> LPAREN expression OP_DIV expression RPAREN .)
    EOS             reduce using rule 21 (expression -> LPAREN expression OP_DIV expression RPAREN .)


state 77

    (26) expression -> ID DOT ID LPAREN args RPAREN .

    RBRACE          reduce using rule 26 (expression -> ID DOT ID LPAREN args RPAREN .)
    OP_ADD          reduce using rule 26 (expression -> ID DOT ID LPAREN args RPAREN .)
    OP_SUB          reduce using rule 26 (expression -> ID DOT ID LPAREN args RPAREN .)
    OP_MUL          reduce using rule 26 (expression -> ID DOT ID LPAREN args RPAREN .)
    OP_DIV          reduce using rule 26 (expression -> ID DOT ID LPAREN args RPAREN .)
    COMMA           reduce using rule 26 (expression -> ID DOT ID LPAREN args RPAREN .)
    RPAREN          reduce using rule 26 (expression -> ID DOT ID LPAREN args RPAREN .)
    EOS             reduce using rule 26 (expression -> ID DOT ID LPAREN args RPAREN .)

