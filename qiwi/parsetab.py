
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programASSIGN COLON COMMA CST_INT DOT EOS ID KEY_AS KEY_ELSE KEY_FN KEY_IF KEY_USE LBRACE LBRACK LPAREN OP_ADD OP_DIV OP_MUL OP_SUB RBRACE RBRACK RPAREN TYPE_QINTprogram : imports fnprogramimports : import importsimports : import : KEY_USE ID KEY_AS ID EOSfnprogram :fnprogram : funcdef fnprogramfuncdef : KEY_FN ID LPAREN argsdecl RPAREN type LBRACE statements RBRACEfuncdef : KEY_FN ID LPAREN argsdecl RPAREN LBRACE statements RBRACEargsdecl :argsdecl : argdeclargsdecl : argdecl COMMA argsdeclargdecl : ID COLON IDstatements : expressionstatements : statement EOS statementsstatement : assignmentassignment : ID ASSIGN expressionassignment : ID COLON ID ASSIGN expressionexpression : LPAREN expression OP_ADD expression RPAREN\n                  | LPAREN expression OP_SUB expression RPAREN\n                  | LPAREN expression OP_MUL expression RPAREN\n                  | LPAREN expression OP_DIV expression RPARENexpression : CST_INTexpression : IDexpression : ID LBRACK CST_INT RBRACKexpression : ID LPAREN args RPARENexpression : ID DOT ID LPAREN args RPARENargs :args : argargs : arg COMMA argsarg : expressiontype : TYPE_QINT LBRACK CST_INT RBRACK'
    
_lr_action_items = {'KEY_FN':([0,2,3,6,8,18,44,47,],[-3,7,-3,7,-2,-4,-8,-7,]),'$end':([0,1,2,3,5,6,8,10,18,44,47,],[-3,0,-5,-3,-1,-5,-2,-6,-4,-8,-7,]),'KEY_USE':([0,3,18,],[4,4,-4,]),'ID':([4,7,12,13,19,21,24,27,29,38,39,40,41,45,55,56,57,58,63,64,65,],[9,11,14,15,22,15,28,28,43,43,52,43,54,28,43,43,43,43,43,43,43,]),'KEY_AS':([9,],[12,]),'LPAREN':([11,24,27,28,29,38,40,43,45,52,55,56,57,58,63,64,65,],[13,29,29,38,29,29,29,38,29,64,29,29,29,29,29,29,29,]),'RPAREN':([13,16,17,21,22,26,33,38,43,49,50,51,61,62,63,64,66,67,68,69,70,71,73,74,75,76,77,],[-9,20,-10,-9,-12,-11,-22,-27,-23,62,-28,-30,-24,-25,-27,-27,73,74,75,76,-29,77,-18,-19,-20,-21,-26,]),'EOS':([14,32,33,34,43,53,61,62,72,73,74,75,76,77,],[18,45,-22,-15,-23,-16,-24,-25,-17,-18,-19,-20,-21,-26,]),'COLON':([15,28,],[19,41,]),'COMMA':([17,22,33,43,50,51,61,62,73,74,75,76,77,],[21,-12,-22,-23,63,-30,-24,-25,-18,-19,-20,-21,-26,]),'LBRACE':([20,23,60,],[24,27,-31,]),'TYPE_QINT':([20,],[25,]),'CST_INT':([24,27,29,35,37,38,40,45,55,56,57,58,63,64,65,],[33,33,33,46,48,33,33,33,33,33,33,33,33,33,33,]),'LBRACK':([25,28,43,],[35,37,37,]),'RBRACE':([28,30,31,33,36,59,61,62,73,74,75,76,77,],[-23,44,-13,-22,47,-14,-24,-25,-18,-19,-20,-21,-26,]),'DOT':([28,43,],[39,39,]),'ASSIGN':([28,54,],[40,65,]),'OP_ADD':([33,42,43,61,62,73,74,75,76,77,],[-22,55,-23,-24,-25,-18,-19,-20,-21,-26,]),'OP_SUB':([33,42,43,61,62,73,74,75,76,77,],[-22,56,-23,-24,-25,-18,-19,-20,-21,-26,]),'OP_MUL':([33,42,43,61,62,73,74,75,76,77,],[-22,57,-23,-24,-25,-18,-19,-20,-21,-26,]),'OP_DIV':([33,42,43,61,62,73,74,75,76,77,],[-22,58,-23,-24,-25,-18,-19,-20,-21,-26,]),'RBRACK':([46,48,],[60,61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'imports':([0,3,],[2,8,]),'import':([0,3,],[3,3,]),'fnprogram':([2,6,],[5,10,]),'funcdef':([2,6,],[6,6,]),'argsdecl':([13,21,],[16,26,]),'argdecl':([13,21,],[17,17,]),'type':([20,],[23,]),'statements':([24,27,45,],[30,36,59,]),'expression':([24,27,29,38,40,45,55,56,57,58,63,64,65,],[31,31,42,51,53,31,66,67,68,69,51,51,72,]),'statement':([24,27,45,],[32,32,32,]),'assignment':([24,27,45,],[34,34,34,]),'args':([38,63,64,],[49,70,71,]),'arg':([38,63,64,],[50,50,50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> imports fnprogram','program',2,'p_program_import_fnprogram','qiwiparser.py',8),
  ('imports -> import imports','imports',2,'p_imports_import_imports','qiwiparser.py',14),
  ('imports -> <empty>','imports',0,'p_imports_blank','qiwiparser.py',18),
  ('import -> KEY_USE ID KEY_AS ID EOS','import',5,'p_import_use','qiwiparser.py',22),
  ('fnprogram -> <empty>','fnprogram',0,'p_fnprogram_blank','qiwiparser.py',26),
  ('fnprogram -> funcdef fnprogram','fnprogram',2,'p_fnprogram_functions','qiwiparser.py',30),
  ('funcdef -> KEY_FN ID LPAREN argsdecl RPAREN type LBRACE statements RBRACE','funcdef',9,'p_funcdef','qiwiparser.py',34),
  ('funcdef -> KEY_FN ID LPAREN argsdecl RPAREN LBRACE statements RBRACE','funcdef',8,'p_funcdef_void','qiwiparser.py',38),
  ('argsdecl -> <empty>','argsdecl',0,'p_argsdecl_null','qiwiparser.py',42),
  ('argsdecl -> argdecl','argsdecl',1,'p_argsdecl_argdecl','qiwiparser.py',46),
  ('argsdecl -> argdecl COMMA argsdecl','argsdecl',3,'p_argsdecl_argdecls','qiwiparser.py',50),
  ('argdecl -> ID COLON ID','argdecl',3,'p_argdecl','qiwiparser.py',54),
  ('statements -> expression','statements',1,'p_statements_expression','qiwiparser.py',65),
  ('statements -> statement EOS statements','statements',3,'p_statements_statements','qiwiparser.py',69),
  ('statement -> assignment','statement',1,'p_statement','qiwiparser.py',73),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','qiwiparser.py',77),
  ('assignment -> ID COLON ID ASSIGN expression','assignment',5,'p_assignment_typed','qiwiparser.py',81),
  ('expression -> LPAREN expression OP_ADD expression RPAREN','expression',5,'p_expression_arithmatic','qiwiparser.py',89),
  ('expression -> LPAREN expression OP_SUB expression RPAREN','expression',5,'p_expression_arithmatic','qiwiparser.py',90),
  ('expression -> LPAREN expression OP_MUL expression RPAREN','expression',5,'p_expression_arithmatic','qiwiparser.py',91),
  ('expression -> LPAREN expression OP_DIV expression RPAREN','expression',5,'p_expression_arithmatic','qiwiparser.py',92),
  ('expression -> CST_INT','expression',1,'p_expression_number','qiwiparser.py',96),
  ('expression -> ID','expression',1,'p_expression_id','qiwiparser.py',100),
  ('expression -> ID LBRACK CST_INT RBRACK','expression',4,'p_expression_indexedid','qiwiparser.py',104),
  ('expression -> ID LPAREN args RPAREN','expression',4,'p_expression_call','qiwiparser.py',108),
  ('expression -> ID DOT ID LPAREN args RPAREN','expression',6,'p_expression_import_call','qiwiparser.py',112),
  ('args -> <empty>','args',0,'p_args_null','qiwiparser.py',116),
  ('args -> arg','args',1,'p_args_arg','qiwiparser.py',120),
  ('args -> arg COMMA args','args',3,'p_args_args','qiwiparser.py',124),
  ('arg -> expression','arg',1,'p_arg','qiwiparser.py',128),
  ('type -> TYPE_QINT LBRACK CST_INT RBRACK','type',4,'p_type_len','qiwiparser.py',136),
]
