TEST ALL IF_QC STATEMENTS

fn main() {
    a: q3 = 0;
    if_qc(a[0]) {H(a[2])};
    if_qc(a[0] and a[1]){X(a[2])};
    if_qc (a[0] or a[1]){X(a[2])};
    if_qc(a[2] nand a[1]){X(a[0])};
    if_qc(a[2] nor a[1]){X(a[0])};
    if_qc(a[2] xor a[1]){X(a[0])};
    if_qc(a[2] xnor a[1]){X(a[0])};
    a
}



TEST Persist-kill mechanism

fn main() {
    a: q2 = 1;
    b: q2 = 1;
    c = b + a;
    a + c
}

TEST bitwise modification

fn main() {
    a: q3 = 0;
    a[0] = H(a[0]);
    b: q1 = 1;
    a[1] = X(b);
    a
}
